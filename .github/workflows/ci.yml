name: CI Pipeline

on:
  push:
    branches: [ main, develop, staging ]
  pull_request:
    branches: [ main, develop, staging ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Security scanning job
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit

      - name: Run dependency scanning
        run: |
          cargo deny check advisories
          cargo deny check licenses
          cargo deny check bans

  # Code quality job
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt

      - name: Check code formatting
        run: cargo fmt -- --check

      - name: Run Clippy linting
        run: cargo clippy -- -D warnings

      - name: Run unit tests
        run: cargo test --verbose

  # Build job
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [security-scan, code-quality]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build workspace
        run: cargo build --verbose

      - name: Build WASM dashboard
        run: |
          cargo install wasm-pack
          cd crates/sniper-wasm-dashboard
          wasm-pack build --target web

  # Integration test job
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run integration tests
        run: cargo test --test "*"

  # Compliance check job
  compliance-check:
    name: Compliance Verification
    runs-on: ubuntu-latest
    needs: [code-quality]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PowerShell
        run: |
          sudo apt-get update
          sudo apt-get install -y powershell

      - name: Run compliance tests
        run: |
          pwsh -Command "scripts/run_compliance_tests.ps1"

  # Telegram notification job
  telegram-notification:
    name: Telegram Notification
    runs-on: ubuntu-latest
    needs: [security-scan, code-quality, build, integration-test, compliance-check]
    if: always()
    steps:
      - name: Check Secrets Availability
        run: |
          echo "TELEGRAM_BOT_TOKEN present: ${{ secrets.TELEGRAM_BOT_TOKEN != '' }}"
          echo "TELEGRAM_CHAT_ID present: ${{ secrets.TELEGRAM_CHAT_ID != '' }}"
          if [ "${{ secrets.TELEGRAM_BOT_TOKEN }}" = "" ]; then
            echo "ERROR: TELEGRAM_BOT_TOKEN secret is not set"
            exit 1
          fi
          if [ "${{ secrets.TELEGRAM_CHAT_ID }}" = "" ]; then
            echo "ERROR: TELEGRAM_CHAT_ID secret is not set"
            exit 1
          fi
      
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ðŸš€ New Push to Repository: ${{ github.repository }}
            
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
            
            Jobs Status:
            - Security Scan: ${{ needs.security-scan.result }}
            - Code Quality: ${{ needs.code-quality.result }}
            - Build: ${{ needs.build.result }}
            - Integration Tests: ${{ needs.integration-test.result }}
            - Compliance Check: ${{ needs.compliance-check.result }}
            
            View Details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          debug: true